# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches-ignore:
      - master
  schedule:
    - cron: '10 1 * * 1-5'

name: shiny-deploy-dev.yaml

permissions: 
  contents: write

jobs:
  shiny-deploy:
    runs-on: ubuntu-latest
    env:
        GITHUB_PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt install libcurl4-openssl-dev libfontconfig1-dev libfreetype6-dev libfribidi-dev libgit2-dev libglpk-dev libharfbuzz-dev libjpeg-dev libpng-dev libtiff-dev libx11-dev pandoc
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: renv

      - uses: r-lib/actions/setup-renv@v2

      - name: Update dashboard data
        run: |
          Rscript -e "source('data-raw/dashboard_data.R')"
          Rscript -e "devtools::document()"
          
      - name: Commit new data
        run: |
          git config --global user.name 'Hamish Gamble'
          git config --global user.email 'gamb0043@flinders.edu.au'
          git add .
          git commit -m 'Update dashboard data' || echo 'No changes to commit'
          git push || echo 'No changes to commit'

      - name: Install rsconnect
        run: install.packages("rsconnect")
        shell: Rscript {0}

      - name: Authorize and deploy app
        env:
          # Provide your app name, account name, and server to be deployed below
          APPNAME: db-dev
          ACCOUNT: aiti
          SERVER: shinyapps.io # server to deploy
        run: |
          renv::restore()
          rsconnect::setAccountInfo(name = "${{ env.ACCOUNT }}", token = "${{ secrets.SHINYAPPS_TOKEN }}", secret = "${{ secrets.SHINYAPPS_SECRET }}")
          rsconnect::deployApp(appName = "${{ env.APPNAME }}", account = "${{ env.ACCOUNT }}", server = "${{ env.SERVER }}", forceUpdate = TRUE)
        shell: Rscript {0}
